// Generated by LiveScript 1.2.0
(function(){
  var breach, common, express, async, http, Mod_Vim;
  breach = require('breach_module');
  common = require('./lib/common.js');
  express = require('express');
  async = require('async');
  http = require('http');
  Mod_Vim = (function(){
    Mod_Vim.displayName = 'Mod_Vim';
    var keybindings, bootstrap, setup, prototype = Mod_Vim.prototype, constructor = Mod_Vim;
    keybindings = function(evt){
      return console.log(evt.type);
    };
    bootstrap = function(port){
      breach.init(function(){
        breach.expose('init', function(src, args, cb_){
          console.log('mod_vim (Vimperator port for Breach)');
          console.log("Listening on " + port);
          breach.module('core').on('tabs:keyboard', keybindings);
          return breach.module('core').on('controls:keyboard', keybindings);
        });
        return breach.expose('kill', function(args, cb_){
          return common.exit(0);
        });
      });
      return process.on('uncaughtException', function(err){
        return common.fatal(err);
      });
    };
    setup = function(){
      var app, http_srv;
      app = express();
      app.use('/', express['static'](__dirname + '/controls'));
      http_srv = http.createServer(app).listen(2009, '127.0.0.1');
      return http_srv.on('listening', function(){
        var port;
        port = http_srv.address().port;
        return bootstrap(port);
      });
    };
    setup();
    function Mod_Vim(){}
    return Mod_Vim;
  }());
}).call(this);
